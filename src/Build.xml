<xml>
	<set name="PROJECT_DIR" value="${haxelib:blueprint}/" />

    <set name="VENDOR_LIB_PATH" value="${PROJECT_DIR}vendor/lib/windows" if="windows" />
    <set name="VENDOR_LIB_PATH" value="${PROJECT_DIR}vendor/lib/mac" if="macos" />
    <set name="VENDOR_LIB_PATH" value="${PROJECT_DIR}vendor/lib/linux" if="linux" />

	<files id='haxe'>
		<compilerflag value="-I${PROJECT_DIR}vendor/include" />

		<file name="${PROJECT_DIR}vendor/src/glad.c" />
		<file name="${PROJECT_DIR}vendor/src/stb_vorbis.c" />
		<file name="${PROJECT_DIR}vendor/src/dr_wav.c" />
		<file name="${PROJECT_DIR}vendor/src/dr_mp3.c" />
		<file name="${PROJECT_DIR}vendor/src/dr_flac.c" />
	</files>

	<!-- WINDOWS LINKER -->
	<target id="haxe" tool="linker" toolid="exe" if="windows">
		<flag value="-libpath:${PROJECT_DIR}vendor/lib/" />
		<flag value="-libpath:${PROJECT_DIR}vendor/lib/windows/" />

		<!-- <lib name="Winmm.lib" /> -->
		<lib name="Gdi32.lib" />
		<lib name="Shell32.lib" />
		<lib name="OpenGL32.lib" />
		<lib name="msvcrt.lib" />

		<lib name="glfw3.lib" />
		<lib name="freetype.lib" />
		<lib name="libpng16_static.lib" />
		<lib name="zlibstatic.lib" />
		<lib name="OpenAL32.lib" />
	</target>

	<!-- OSX LINKER -->
	<target id="haxe" tool="linker" toolid="exe" if="macos">
		<flag value="-framework" />
		<flag value="IOKit" />
		<flag value="-framework" />
		<flag value="Cocoa" />
		<flag value="-framework" />
		<flag value="OpenGL" />
		<flag value="-framework" />
		<flag value="OpenAL" />

		<!-- <flag value="-libpath:${PROJECT_DIR}vendor/lib/" /> -->
		<!-- <flag value="-libpath:${PROJECT_DIR}vendor/lib/mac64/" if="HXCPP_ARM64" />
		<flag value="-libpath:${PROJECT_DIR}vendor/lib/mac/" unless="HXCPP_ARM64" /> -->

	<!-- kinda wanna try -frameworkk again -->
	<!-- less errors! -->
	<!-- not set with HXCPP_STATIC_LINK -->
	<!-- also mac needs special build instructions -->
	<!-- i cant bother adding same libs that work with every mac version-->
	<!-- idk why it loaded the dynamic one -->
	<!-- honestly understandable -->
	<!-- i hate bindings/linkings -->
	<!-- this is why lime just uses submodules -->
		<!-- dylib is dynamic linked libraries oh the static already has everything?-->
		<lib name="libglfw3.a" if="HXCPP_STATIC_LINK" />
		<lib name="libglfw.3.dylib" unless="HXCPP_STATIC_LINK"/>
		<lib name="libpng16.a" if="HXCPP_STATIC_LINK" />
		<lib name="libpng16.16.dylib" unless="HXCPP_STATIC_LINK"/>
		<lib name="libfreetype.a" if="HXCPP_STATIC_LINK" />
		<lib name="libfreetype.6.dylib" unless="HXCPP_STATIC_LINK"/>
	</target>

	<!-- LINUX LINKER -->
	<target id="haxe" if="linux">
		<flag value="-lglfw" />
		<flag value="-lGL" />
		<flag value="-lX11" />
		<flag value="-lpthread" />
		<flag value="-lXrandr" />
		<flag value="-lXi" />
		<flag value="-ldl" />
		<flag value="-lopenal" />
		<flag value="-lfreetype" />
		<flag value="-lpng" />
	</target>

	<copyFile name="missingImage.png" from="${PROJECT_DIR}blueprintAssets" toolId="exe" />

	<copyFile name="OpenAL32.dll" from="${PROJECT_DIR}vendor/lib" toolId="exe"
		overwrite="true" if="windows" />
	<copyFile name="freetype.dll" from="${PROJECT_DIR}vendor/lib" toolId="exe"
		overwrite="true" if="windows" />
</xml>